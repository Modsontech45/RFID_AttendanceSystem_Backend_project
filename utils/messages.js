const messages = {
  en: {
    category: {
      categoryCreated: 'Category created',
      categoryRequired: 'Category name is required.',
      onlyAdmins: 'Only admins can perform this action.',
      internalError: 'Internal server error',
      notFoundOrUnauthorized: 'Category not found or unauthorized.',
      deletedSuccess: 'Category deleted successfully.',
    },
    device: {
      missing_fields: "Missing required fields.",
      already_registered: "Device already registered.",
      created: "Device registered successfully.",
      deleted: "Device deleted successfully.",
      not_found_or_unauthorized: "Device not found or unauthorized.",
      not_found_or_invalid_api: "Device not found or invalid API key.",
      missing_uid_or_api: "Missing device UID or API key.",
      missing_api_key: "Missing API key",
      fetch_failed: "Failed to fetch devices.",
      delete_failed: "Failed to delete device.",
      update_failed: "Failed to update device status.",
      marked_online: "Device marked as online."
    },
    auth: {
  noToken: 'No token provided',
  invalidToken: 'Invalid token',
  accessDenied: 'Access denied',
},
 api: {
      required: "API key required",
      invalid: "Invalid API key",
      error: "Server error validating API key",
    },
     attendance: {
      noApiKey: "No API key found",
      noneForKey: "No attendance data for your API key",
      serverError: "Internal server error",
    },
      register: {
      allFieldsRequired: 'All fields (including API key) are required.',
      invalidApiKey: 'Invalid or unverified API key.',
      uidExists: 'UID already registered.',
      success: 'Student registered successfully.',
      failed: 'Registration failed.'
    },
    scan: {
      late: 'late',
  missingFields: 'uid and device_uid are required.',
  uidNotRegistered: 'New UID - Registration required',
  registerNow: 'Register now',
  outsideTime: 'Outside allowed sign-in/sign-out time',
  outsideFlag: 'Outside Time',
  signInFirst: 'Sign-in required before sign-out',
  signInFlag: 'SignIn 1st',
  signedIn: 'Signed in',
  lateSignIn: 'You signed in late',
  signedOut: 'Signed out',
  error: 'Error during scan processing',
  failed: 'Scan failed',
  deviceRequired: 'device_uid is required',
  mismatch: (otherSchool) => 
      `üö®"${otherSchool}" Student here`
},
students: {
  noApiKey: 'No API key found for user',
  noStudentsFound: 'No students found with your API key',
  invalidUidUpdate: 'Invalid UID update request.',
  studentNotFound: 'Student not found',
  uidUpdateSubject: 'UID Update Confirmation',
  uidUpdateText: (oldUid, newUid) =>
    `Your UID has been successfully updated from ${oldUid} to ${newUid}.\n\nIf you did not authorize this change, please contact your school immediately.`,
  contactSupport: 'You can reach us at rocklegacy@gmail.com or call +228 93 94 60 43 for assistance.',
  uidUpdateSuccess: (email) => `UID updated and email sent to ${email}`,
  uidUpdateFailed: 'UID update failed'
},
admin: {
  requiredFields: 'All fields are required',
  alreadyExists: 'Admin already exists',
  signupSuccess: 'Admin created. Please check your email to verify your account.',
  verifyInstruction: 'Thank you for signing up. Please click the button below to verify your email:',
  verifyEmail: 'Verify Email',
  ignoreEmail: 'If you didn‚Äôt sign up, you can safely ignore this email.',
  verifySubject: 'Verify Your Email Address',
  invalidToken: 'Invalid or expired token',
  verifiedSuccess: 'Email verified successfully. You can now log in.',
  emailPasswordRequired: 'Email and password are required',
  invalidCredentials: 'Invalid credentials',
  notVerified: 'Please verify your email before logging in.',
  loginSuccess: 'Login successful'
},
reset: {
  subject: 'Password Reset Request',
  requested: 'You requested a password reset.',
  clickHere: 'Click here to reset your password.',
  expiry: 'This link expires in 15 minutes.',
  notFound: 'No user found with that email',
  sent: 'Reset link sent to your email',
  success: 'Password reset successful',
  invalidToken: 'Invalid or expired token',
},
teacher: {
  exists: "Teacher already exists",
  added: "Teacher added and notified",
  noApiKey: "API key not found for admin",
  welcomeSubject: "Welcome to the Team",
  welcomeBody: "Hello! You have been added as a teacher. Login at: https://www.rfid-attendance-synctuario-theta.vercel.app",
  loginSuccess: "Login successful",
  adminOnly: "Only admins can view this resource",
  notFound: "Teacher not found",
  notFoundOrUnauthorized: "Teacher not found or unauthorized action.",
  removalSubject: "Teacher Account Removed",
  removalBody: "You have been removed by your admin. Contact them if this is a mistake.",
  deleted: "Teacher deleted successfully.",
  updated: "Profile updated",
  nothingToUpdate: "Nothing to update"
}




  },





  fr: {
    category: {
      categoryCreated: 'Cat√©gorie cr√©√©e',
      categoryRequired: 'Le nom de la cat√©gorie est requis.',
      onlyAdmins: 'Seuls les administrateurs peuvent effectuer cette action.',
      internalError: 'Erreur interne du serveur',
      notFoundOrUnauthorized: 'Cat√©gorie introuvable ou non autoris√©e.',
      deletedSuccess: 'Cat√©gorie supprim√©e avec succ√®s.',
    },
    device: {
      missing_fields: "Champs obligatoires manquants.",
      already_registered: "Appareil d√©j√† enregistr√©.",
      created: "Appareil enregistr√© avec succ√®s.",
      deleted: "Appareil supprim√© avec succ√®s.",
      not_found_or_unauthorized: "Appareil introuvable ou non autoris√©.",
      not_found_or_invalid_api: "Appareil introuvable ou cl√© API invalide.",
      missing_uid_or_api: "UID ou cl√© API manquant.",
      missing_api_key: "Cl√© API manquante",
      fetch_failed: "√âchec du chargement des appareils.",
      delete_failed: "√âchec de la suppression de l'appareil.",
      update_failed: "√âchec de la mise √† jour de l'appareil.",
      marked_online: "Appareil marqu√© comme en ligne."
    },
    auth: {
  noToken: 'Aucun jeton fourni',
  invalidToken: 'Jeton invalide',
  accessDenied: 'Acc√®s refus√©',
},
 api: {
      required: "Cl√© API requise",
      invalid: "Cl√© API invalide",
      error: "Erreur serveur lors de la validation de la cl√© API",
    },
     attendance: {
      noApiKey: "Aucune cl√© API trouv√©e",
      noneForKey: "Aucune donn√©e de pr√©sence pour votre cl√© API",
      serverError: "Erreur interne du serveur",
    },
     register: {
      allFieldsRequired: 'Tous les champs (y compris la cl√© API) sont requis.',
      invalidApiKey: 'Cl√© API invalide ou non v√©rifi√©e.',
      uidExists: 'UID d√©j√† enregistr√©.',
      success: '√âtudiant enregistr√© avec succ√®s.',
      failed: "L'enregistrement a √©chou√©."
    },
   scan: {
    late: 'En retard',
  missingFields: 'uid et device_uid sont requis.',
  uidNotRegistered: 'Nouvel UID - Enregistrement requis',
  registerNow: 'Enregistrez maintenant',
  outsideTime: 'En dehors des heures autoris√©es de pointage',
  outsideFlag: 'Hors temps',
  signInFirst: 'Connexion requise avant d√©connexion',
  signInFlag: 'Connectez-vous d\'abord',
  signedIn: 'Connect√©',
  lateSignIn: 'Vous vous √™tes connect√© en retard',
  signedOut: 'D√©connect√©',
  error: 'Erreur lors du traitement du scan',
  failed: '√âchec du scan',
  deviceRequired: 'device_uid est requis',
   mismatch: (otherSchool) => 
      `üö® "${otherSchool}" Eleve ici`
},
students: {
  noApiKey: 'Aucune cl√© API trouv√©e pour cet utilisateur',
  noStudentsFound: 'Aucun √©l√®ve trouv√© pour votre cl√© API',
  invalidUidUpdate: 'Requ√™te de mise √† jour UID invalide.',
  studentNotFound: '√âl√®ve introuvable',
  uidUpdateSubject: 'Confirmation de mise √† jour de l‚ÄôUID',
  uidUpdateText: (oldUid, newUid) =>
    `Votre UID a √©t√© mis √† jour avec succ√®s de ${oldUid} √† ${newUid}.\n\nSi vous n‚Äôavez pas autoris√© ce changement, veuillez contacter votre √©cole imm√©diatement.`,
  contactSupport: 'Vous pouvez nous contacter √† rocklegacy@gmail.com ou appeler le +228 93 94 60 43 pour obtenir de l‚Äôaide.',
  uidUpdateSuccess: (email) => `UID mis √† jour et email envoy√© √† ${email}`,
  uidUpdateFailed: '√âchec de la mise √† jour de l‚ÄôUID'
},
admin: {
  requiredFields: 'Tous les champs sont requis',
  alreadyExists: "L'administrateur existe d√©j√†",
  signupSuccess: 'Administrateur cr√©√©. Veuillez v√©rifier votre e-mail pour activer votre compte.',
  verifyInstruction: 'Merci de vous √™tre inscrit. Cliquez sur le bouton ci-dessous pour v√©rifier votre adresse e-mail :',
  verifyEmail: 'V√©rifier l‚Äôe-mail',
  ignoreEmail: 'Si vous ne vous √™tes pas inscrit, vous pouvez ignorer cet e-mail.',
  verifySubject: 'V√©rifiez votre adresse e-mail',
  invalidToken: 'Token invalide ou expir√©',
  verifiedSuccess: 'E-mail v√©rifi√© avec succ√®s. Vous pouvez maintenant vous connecter.',
  emailPasswordRequired: "L‚Äôe-mail et le mot de passe sont requis",
  invalidCredentials: 'Identifiants invalides',
  notVerified: 'Veuillez v√©rifier votre e-mail avant de vous connecter.',
  loginSuccess: 'Connexion r√©ussie'
},
reset: {
  subject: 'Demande de r√©initialisation du mot de passe',
  requested: 'Vous avez demand√© une r√©initialisation de mot de passe.',
  clickHere: 'Cliquez ici pour r√©initialiser votre mot de passe.',
  expiry: 'Ce lien expire dans 15 minutes.',
  notFound: 'Aucun utilisateur trouv√© avec cet e-mail',
  sent: 'Lien de r√©initialisation envoy√© √† votre e-mail',
  success: 'R√©initialisation du mot de passe r√©ussie',
  invalidToken: 'Lien invalide ou expir√©',
},
teacher: {
  exists: "L'enseignant existe d√©j√†",
  added: "Enseignant ajout√© et notifi√©",
  noApiKey: "Cl√© API introuvable pour l'administrateur",
  welcomeSubject: "Bienvenue dans l‚Äô√©quipe",
  welcomeBody: "Bonjour ! Vous avez √©t√© ajout√© en tant qu'enseignant. Connectez-vous : https://www.rfid-attendance-synctuario-theta.vercel.app",
  loginSuccess: "Connexion r√©ussie",
  adminOnly: "Seuls les administrateurs peuvent consulter cette ressource",
  notFound: "Enseignant introuvable",
  notFoundOrUnauthorized: "Enseignant introuvable ou action non autoris√©e.",
  removalSubject: "Compte enseignant supprim√©",
  removalBody: "Vous avez √©t√© retir√© du syst√®me. Contactez votre administrateur si c'est une erreur.",
  deleted: "Enseignant supprim√© avec succ√®s.",
  updated: "Profil mis √† jour",
  nothingToUpdate: "Aucune donn√©e √† mettre √† jour"
}



  }
};



module.exports = function getMessage(lang = 'en', key, ...args) {
  const parts = key.split('.');
  const message = parts.reduce((obj, part) => obj && obj[part], messages[lang]) 
                 || parts.reduce((obj, part) => obj && obj[part], messages.en);

  // If message is a function, call it with the provided args
  if (typeof message === 'function') {
    return message(...args);
  }

  return message || key; // fallback to key name if not found
};
